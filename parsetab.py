
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORrightNOTRARITY_NAME ID ASSIGN EXTRACT SPLIT LBRACKET RBRACKET COMMA STRING INTEGER LPAREN RPAREN LBRACE RBRACE REPEAT ANY PROPOSITION AND WHERE NOT OR FUNCTION ADDstart : rarity_listrarity_list : rarity\n                   | rarity_list rarityexprs : expression\n             | exprs expressionrarity : RARITY_NAME INTEGER exprsexpression : REPEAT INTEGER LBRACE exprs RBRACEexpression : ID ASSIGN val\n                  | ID ASSIGN val_listexpression : val EXTRACT IDexpression : val SPLIT id_listexpression : ADD LPAREN val RPARENval_list : LBRACKET val_listp RBRACKETval : IDval : ANYval : STRING\n           | INTEGERval : FUNCTION LPAREN val_listp RPARENval : LBRACKET val WHERE prop RBRACKETprop : PROPOSITION LPAREN val_listp RPARENprop : LPAREN prop RPARENprop : NOT propprop : prop OR propprop : prop AND propid_list : ID\n               | id_list COMMA ID\n       val_listp : val\n                 | val_listp COMMA val'

_lr_action_items = {'INTEGER':([1,5,7,9,12,13,14,16,17,18,20,21,22,26,27,28,29,34,35,36,37,44,45,46,47,49,50,53,57,58,],[5,7,-17,7,23,-15,-4,7,-16,7,-14,7,7,-5,-9,-8,7,7,-10,-25,-11,7,-18,-12,7,-13,7,-19,-7,-26,]),'PROPOSITION':([30,41,42,54,55,],[40,40,40,40,40,]),'COMMA':([7,13,17,20,31,32,36,37,38,39,45,53,56,58,59,],[-17,-15,-16,-14,-27,44,-25,48,-27,44,-18,-19,-28,-26,44,]),'ID':([5,7,9,13,14,16,17,18,20,21,22,24,25,26,27,28,29,34,35,36,37,44,45,46,47,48,49,50,53,57,58,],[8,-17,20,-15,-4,8,-16,20,-14,20,20,35,36,-5,-9,-8,20,8,-10,-25,-11,20,-18,-12,8,58,-13,20,-19,-7,-26,]),'LBRACKET':([5,7,9,13,14,16,17,18,20,21,22,26,27,28,29,34,35,36,37,44,45,46,47,49,50,53,57,58,],[9,-17,9,-15,-4,9,-16,29,-14,9,9,-5,-9,-8,9,9,-10,-25,-11,9,-18,-12,9,-13,9,-19,-7,-26,]),'LPAREN':([10,11,30,40,41,42,54,55,],[21,22,41,50,41,41,41,41,]),'RPAREN':([7,13,17,20,31,32,33,45,51,52,53,56,59,60,61,62,63,],[-17,-15,-16,-14,-27,45,46,-18,60,-22,-19,-28,63,-21,-23,-24,-20,]),'RBRACE':([7,13,14,17,20,26,27,28,35,36,37,45,46,47,49,53,57,58,],[-17,-15,-4,-16,-14,-5,-9,-8,-10,-25,-11,-18,-12,57,-13,-19,-7,-26,]),'OR':([43,51,52,60,61,62,63,],[54,54,-22,-21,-23,-24,-20,]),'RARITY_NAME':([0,2,4,6,7,13,14,16,17,20,26,27,28,35,36,37,45,46,49,53,57,58,],[1,1,-2,-3,-17,-15,-4,-6,-16,-14,-5,-9,-8,-10,-25,-11,-18,-12,-13,-19,-7,-26,]),'EXTRACT':([7,8,13,15,17,45,53,],[-17,-14,-15,24,-16,-18,-19,]),'RBRACKET':([7,13,17,20,38,39,43,45,52,53,56,60,61,62,63,],[-17,-15,-16,-14,-27,49,53,-18,-22,-19,-28,-21,-23,-24,-20,]),'ASSIGN':([8,],[18,]),'FUNCTION':([5,7,9,13,14,16,17,18,20,21,22,26,27,28,29,34,35,36,37,44,45,46,47,49,50,53,57,58,],[10,-17,10,-15,-4,10,-16,10,-14,10,10,-5,-9,-8,10,10,-10,-25,-11,10,-18,-12,10,-13,10,-19,-7,-26,]),'LBRACE':([23,],[34,]),'ADD':([5,7,13,14,16,17,20,26,27,28,34,35,36,37,45,46,47,49,53,57,58,],[11,-17,-15,-4,11,-16,-14,-5,-9,-8,11,-10,-25,-11,-18,-12,11,-13,-19,-7,-26,]),'REPEAT':([5,7,13,14,16,17,20,26,27,28,34,35,36,37,45,46,47,49,53,57,58,],[12,-17,-15,-4,12,-16,-14,-5,-9,-8,12,-10,-25,-11,-18,-12,12,-13,-19,-7,-26,]),'ANY':([5,7,9,13,14,16,17,18,20,21,22,26,27,28,29,34,35,36,37,44,45,46,47,49,50,53,57,58,],[13,-17,13,-15,-4,13,-16,13,-14,13,13,-5,-9,-8,13,13,-10,-25,-11,13,-18,-12,13,-13,13,-19,-7,-26,]),'$end':([2,3,4,6,7,13,14,16,17,20,26,27,28,35,36,37,45,46,49,53,57,58,],[-1,0,-2,-3,-17,-15,-4,-6,-16,-14,-5,-9,-8,-10,-25,-11,-18,-12,-13,-19,-7,-26,]),'SPLIT':([7,8,13,15,17,45,53,],[-17,-14,-15,25,-16,-18,-19,]),'WHERE':([7,13,17,19,20,38,45,53,],[-17,-15,-16,30,-14,30,-18,-19,]),'AND':([43,51,52,60,61,62,63,],[55,55,-22,-21,-23,-24,-20,]),'STRING':([5,7,9,13,14,16,17,18,20,21,22,26,27,28,29,34,35,36,37,44,45,46,47,49,50,53,57,58,],[17,-17,17,-15,-4,17,-16,17,-14,17,17,-5,-9,-8,17,17,-10,-25,-11,17,-18,-12,17,-13,17,-19,-7,-26,]),'NOT':([30,41,42,54,55,],[42,42,42,42,42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'val_listp':([21,29,50,],[32,39,59,]),'id_list':([25,],[37,]),'val_list':([18,],[27,]),'prop':([30,41,42,54,55,],[43,51,52,61,62,]),'val':([5,9,16,18,21,22,29,34,44,47,50,],[15,19,15,28,31,33,38,15,56,15,31,]),'start':([0,],[3,]),'rarity_list':([0,],[2,]),'exprs':([5,34,],[16,47,]),'expression':([5,16,34,47,],[14,26,14,26,]),'rarity':([0,2,],[4,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> rarity_list','start',1,'p_start','parsertree.py',425),
  ('rarity_list -> rarity','rarity_list',1,'p_rarity_list','parsertree.py',432),
  ('rarity_list -> rarity_list rarity','rarity_list',2,'p_rarity_list','parsertree.py',433),
  ('exprs -> expression','exprs',1,'p_exprs_list','parsertree.py',443),
  ('exprs -> exprs expression','exprs',2,'p_exprs_list','parsertree.py',444),
  ('rarity -> RARITY_NAME INTEGER exprs','rarity',3,'p_rarity','parsertree.py',454),
  ('expression -> REPEAT INTEGER LBRACE exprs RBRACE','expression',5,'p_expression_repeat','parsertree.py',461),
  ('expression -> ID ASSIGN val','expression',3,'p_assign_expression','parsertree.py',468),
  ('expression -> ID ASSIGN val_list','expression',3,'p_assign_expression','parsertree.py',469),
  ('expression -> val EXTRACT ID','expression',3,'p_extract_expression','parsertree.py',476),
  ('expression -> val SPLIT id_list','expression',3,'p_split_expression','parsertree.py',483),
  ('expression -> ADD LPAREN val RPAREN','expression',4,'p_add_expression','parsertree.py',490),
  ('val_list -> LBRACKET val_listp RBRACKET','val_list',3,'p_val_list','parsertree.py',497),
  ('val -> ID','val',1,'p_val_id','parsertree.py',504),
  ('val -> ANY','val',1,'p_val_any','parsertree.py',511),
  ('val -> STRING','val',1,'p_val_constant','parsertree.py',518),
  ('val -> INTEGER','val',1,'p_val_constant','parsertree.py',519),
  ('val -> FUNCTION LPAREN val_listp RPAREN','val',4,'p_val_function','parsertree.py',526),
  ('val -> LBRACKET val WHERE prop RBRACKET','val',5,'p_val_comprehension','parsertree.py',533),
  ('prop -> PROPOSITION LPAREN val_listp RPAREN','prop',4,'p_prop','parsertree.py',540),
  ('prop -> LPAREN prop RPAREN','prop',3,'p_prop_nested','parsertree.py',547),
  ('prop -> NOT prop','prop',2,'p_prop_not','parsertree.py',554),
  ('prop -> prop OR prop','prop',3,'p_prop_or','parsertree.py',561),
  ('prop -> prop AND prop','prop',3,'p_prop_and','parsertree.py',568),
  ('id_list -> ID','id_list',1,'p_separator_list','parsertree.py',575),
  ('id_list -> id_list COMMA ID','id_list',3,'p_separator_list','parsertree.py',576),
  ('val_listp -> val','val_listp',1,'p_separator_list','parsertree.py',577),
  ('val_listp -> val_listp COMMA val','val_listp',3,'p_separator_list','parsertree.py',578),
]
